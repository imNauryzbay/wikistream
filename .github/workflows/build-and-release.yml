name: Build and Release WikiStream

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    name: Build for ${{ matrix.os }} with Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.21.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set OS Variables
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest) echo "GOOS=linux" >> $GITHUB_ENV ;;
            windows-latest) echo "GOOS=windows" >> $GITHUB_ENV ;;
            macos-latest) echo "GOOS=darwin" >> $GITHUB_ENV ;;
          esac
          echo "GOARCH=amd64" >> $GITHUB_ENV

      - name: Build binary
        run: |
          cd cmd
          go build -o wikistream-${{ env.GOOS }}-amd64-go${{ matrix.go-version }} main.go

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: wikistream-${{ env.GOOS }}-go${{ matrix.go-version }}
          path: cmd/wikistream-*

  release:
    name: Release Binaries
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts  # Store all artifacts in a single folder

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          body: "Binaries in case if it not scalable"
